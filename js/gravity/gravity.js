// Generated by CoffeeScript 1.6.3
(function() {
  var Ball, frcX, frcY, gravX, gravY;

  gravX = 0;

  gravY = 0.1;

  frcX = 0;

  frcY = 4;

  Ball = (function() {
    function Ball(event) {
      var b, g, r;
      this.el = document.documentElement;
      this._velx = 0;
      this._vely = 0;
      this._restX = 0;
      this._restY = 0.7;
      this.d = document.createElement('div');
      this.d.style.borderRadius = '20px';
      this.d.style.height = '40px';
      this.d.style.width = '40px';
      this.d.style.position = 'absolute';
      r = parseInt(Math.random() * 255);
      g = parseInt(Math.random() * 255);
      b = parseInt(Math.random() * 255);
      this.d.style.backgroundColor = 'rgb(' + r + ',' + g + ',' + b + ')';
      this.d.style.top = event.clientY - 20 + 'px';
      this.d.style.left = event.clientX - 20 + 'px';
      document.documentElement.appendChild(this.d);
    }

    Ball.prototype.velocityX = function() {
      return this._velx;
    };

    Ball.prototype.velocityY = function() {
      return this._vely;
    };

    Ball.prototype.frame = function() {
      this._vely += gravY;
      this.setX(Math.floor(this.x() + this._velx));
      this.setY(Math.floor(this.y() + this._vely));
      if (this.x() >= this.el.clientWidth) {
        this._velx = -this._velx * this._restX;
      }
      if (this.y() >= this.el.clientHeight) {
        return this._vely = -this._vely * this._restY;
      }
    };

    Ball.prototype.x = function() {
      return parseInt(this.d.style.left);
    };

    Ball.prototype.y = function() {
      return parseInt(this.d.style.top);
    };

    Ball.prototype.setX = function(x) {
      return this.d.style.left = x + 'px';
    };

    Ball.prototype.setY = function(y) {
      return this.d.style.top = y + 'px';
    };

    return Ball;

  })();

  $(document).ready(function() {
    var animate, balls;
    balls = [];
    $(document.documentElement).click(function(e) {
      var b;
      b = new Ball(e);
      return balls.push(b);
    });
    animate = function() {
      balls.forEach(function(ball) {
        return ball.frame();
      });
      return window.requestAnimationFrame(animate);
    };
    return animate();
  });

}).call(this);
