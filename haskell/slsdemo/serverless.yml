org: dandart
app: slsdemo
service: slsdemo

docker: false

environment:
  LANG: en_GB.UTF-8
  LC_ALL: en_GB.UTF-8

provider:
  name: aws
  region: eu-west-2
  runtime: haskell
  logs:
    restApi: false

functions:
  github-pr:
    handler: slsdemo.githubpr
    name: ${self:provider.stage}-github-pr
    events:
      - http:
          path: /github
          method: get
          cors: true
          private: false
      - http:
          path: /github
          method: post
          cors: true
          private: false
      - http:
          path: /github
          method: get
          cors: true
          private: false
  emailme:
    handler: slsdemo.emailme
    name: ${self:provider.stage}-emailme
    events:
      - http:
          path: /email
          method: get
          cors: true
          private: false

plugins:
#  - serverless-offline
  - serverless-haskell
#  - serverless-appsync-offline # kills deploy (or spams with warnings)
#  - serverless-appsync-plugin # not ready yet anyway...
#  - serverless-dynamodb-local
#  - fullstack-serverless
#  - serverless-s3-local
#  - serverless-static # kills deploy so disable or find alternative
#  - serverless-domain-manager

custom:
  haskell:
  #fullstack:
    # domain: slsdemo.jolharg.com
  #  bucketName: slsdemo-fullstack
  #  distributionFolder: public
  #  singlePageApp: true
  #  apiPath: api
  #  clientCommand: stack run html

  #appSync:
  #  name: "api"
  #  authenticationType: API_KEY
  #  schema: schema.graphql
    #openIdConnectConfig:
    #  issuer: google
    #  clientId:
    #  iatTTL:
    #  authTTL:
  #static:
  #  bucket: slsdemo-static
  #dynamodb:
  #customDomain:
  #  domainName: sls.jolharg.com
  #  createRoute53Record: true