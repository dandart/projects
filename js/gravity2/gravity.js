// Generated by CoffeeScript 1.6.3
(function() {
  var Ball, MCtr, Trace, frcX, frcY, gravG, gravXCtr, gravYCtr, traceLength;

  gravG = 1;

  gravXCtr = 800;

  gravYCtr = 500;

  MCtr = 10000;

  frcX = 0;

  frcY = 0;

  traceLength = 200;

  Math.sgn = function(val) {
    if (val > 0) {
      return 1;
    }
    if (val < 0) {
      return -1;
    }
    return 0;
  };

  Trace = (function() {
    function Trace(ball) {
      var b, g, r;
      this.el = document.documentElement;
      this.d = document.createElement('div');
      this.d.style.borderRadius = '1px';
      this.d.style.height = '3px';
      this.d.style.width = '3px';
      this.d.style.position = 'absolute';
      r = 0;
      g = 0;
      b = 0;
      this.d.style.backgroundColor = ball.colour();
      this.d.style.top = ball.y() + 20 + 'px';
      this.d.style.left = ball.x() + 20 + 'px';
      this.el.appendChild(this.d);
    }

    Trace.prototype["delete"] = function() {
      return this.el.removeChild(this.d);
    };

    return Trace;

  })();

  Ball = (function() {
    function Ball(event) {
      var b, g, posX, posY, r;
      this.el = document.documentElement;
      if (event) {
        posY = event.clientY;
        posX = event.clientX;
      } else {
        posY = Math.floor(Math.random() * this.el.clientHeight);
        posX = Math.floor(Math.random() * this.el.clientWidth);
      }
      this.m = 1;
      this.traces = [];
      this.gravX = 0;
      this.gravY = 0;
      this._velx = Math.random() * 6 - 3;
      this._vely = Math.random() * 6 - 3;
      this._restX = 0;
      this._restY = 0;
      this.d = document.createElement('div');
      this.d.style.borderRadius = '20px';
      this.d.style.height = '40px';
      this.d.style.width = '40px';
      this.d.style.position = 'absolute';
      r = parseInt(Math.random() * 255);
      g = parseInt(Math.random() * 255);
      b = parseInt(Math.random() * 255);
      this.d.style.backgroundColor = 'rgb(' + r + ',' + g + ',' + b + ')';
      this.d.style.top = posY - 20 + 'px';
      this.d.style.left = posX - 20 + 'px';
      document.documentElement.appendChild(this.d);
    }

    Ball.prototype.colour = function() {
      return this.d.style.backgroundColor;
    };

    Ball.prototype.velocityX = function() {
      return this._velx;
    };

    Ball.prototype.velocityY = function() {
      return this._vely;
    };

    Ball.prototype.frame = function() {
      var d, d2, d2xp, d2yp, dx, dy;
      dy = this.y() - gravXCtr;
      dx = this.x() - gravXCtr;
      d2 = Math.pow(dy, 2) + Math.pow(dx, 2);
      d = Math.sqrt(d2);
      d2xp = dx / d;
      d2yp = dy / d;
      this.gravX = d2xp * gravG * MCtr * this.m / d2;
      this.gravY = d2yp * gravG * MCtr * this.m / d2;
      this._vely -= this.gravY;
      this._velx -= this.gravX;
      this.setX(Math.floor(this.x() + this._velx));
      return this.setY(Math.floor(this.y() + this._vely));
    };

    Ball.prototype.trace = function() {
      var trace;
      if (traceLength <= this.traces.length) {
        this.traces[0]["delete"]();
        this.traces.shift();
      }
      trace = new Trace(this);
      return this.traces.push(trace);
    };

    Ball.prototype.x = function() {
      return parseInt(this.d.style.left);
    };

    Ball.prototype.y = function() {
      return parseInt(this.d.style.top);
    };

    Ball.prototype.setX = function(x) {
      return this.d.style.left = x + 'px';
    };

    Ball.prototype.setY = function(y) {
      return this.d.style.top = y + 'px';
    };

    return Ball;

  })();

  $(document).ready(function() {
    var animate, balls;
    balls = [];
    $(document.documentElement).click(function(e) {
      var b;
      b = new Ball(e);
      return balls.push(b);
    });
    animate = function() {
      balls.forEach(function(ball) {
        ball.trace();
        return ball.frame();
      });
      return window.requestAnimationFrame(animate);
    };
    return animate();
  });

}).call(this);
